Change Log
===================================

master Branch #1 - 12/05/16
---------------------------
- Added .gitignore
- Added CHANGELOG.txt
- Added LICENSE
- Added README.md
- Setup Eclipse Project
	- Added PNGDecoder.jar
	- Added LWJGL3
	
Window-Creation Branch #1 - 12/05/16
------------------------------------
- Added Display Class
- Display -> create() successfully creates window
- Added update() method
- Display -> destroy() successfully destroys a window
- Added methods for setting the window resolution
- Added method to change window title
- Added setHints method
- Added setVisible method
- Added setWindowMode method
- Added centreOnScreen method
- Added getter methods for all current variables
- Added shouldClose Method
- Added destroyed variable
- Added isDestroyed Method
- Added GLFWWindowSizeCallback
- Added GLFWFrameBufferSizeCallback
- Added Static Map 'displays' to keep record of all displays

Window-Creation Branch #2 - 12/05/16
------------------------------------
- Moved Display class to org.bearengine.graphics package

Engine-Core Branch #1 - 12/05/16 to 14/05/16
--------------------------------------------
- Updated Display class
-- Added public static final Display mainDisplay to keep track of primary engine display
-- Stopped a display being created more than once
-- Added setting FrameBufferSize callback(forgot to add it before)
-- Added setVSYNC method

- Created Engine class
-- Added two contructors
-- Added Start method
-- Added override run method
-- Added init method
--- Initialises GLFW
--- Creates Display.mainDisplay(no vsync, centred, set as current)
--- Creates and Adds SplashScreen(5 secs) to screenOrder
-- Added EngineLoop method
--- Added Main Engine loop
---- Exits when Display.mainDisplay should exit
---- Updates Display.mainDisplay
---- Keeps track of FPS and UPS
-- Added update method
--- Runs through each 'Game' in screenOrder
--- Engine stops when runs out of screen to run
-- Added render method
--- Renders current Game Screen
-- Added sync method
--- Limits FPS to select fps
-- Added cleanup method
--- Destroys all Displays in Display.displays
-- Added Exit method
--- Calls cleanup method and then System.exit()
-- Added static void main(string... args) method for testing

- Created Time class
-- Added private static double lastLoopTime
-- Added public static int FPS
-- Added public static int UPS
-- Added static init method
-- Added static double getTime method
-- Added static double getElapsedTime method
-- Added static double getLastLoopTime method

- Created Game class
-- Added public boolean isInitalised
-- Added public boolean isExitRequested
-- Added abstract init method
-- Added abstract update(float deltaTime) method
-- Added abstract render method
-- Added abstract cleanup method

- Created SplashScreen class (extends Game)
-- Added private double startTime
-- Added private double duration
-- Added private double endTime
-- Added one Constructor
-- Added override init method
-- Added override update method
-- Added override render method
-- Added override cleanup method
-- Added isExitRequested getter method

Engine-Core Branch #2 - 17/05/16 to 19/05/16
--------------------------------------------
- Updated Display class
-- Changed static final ints Windowed, Fullscreen & Borderless for enum WindowMode
-- Changed windowMode type to enum-type WindowMode
-- When Display is created, windowMode.namne() is printed instead of int value
-- Changed setWindowMode method to use WindowMode enum
-- Changed getWindowMode to return enum-type WindowMode

- Updated Engine class
-- Changed private Thread mainThread to private final Thread ENGINE_THREAD
-- Added private final Game gameScreen
-- Added Game gameScreen parameter to first constructor
-- Added Game gameScreen parameter to second constructor
-- start() method - Changed mainThread.start() to ENGINE_THREAD.start()
-- run() method - Changed call to cleanup() with call to Exit()
-- Added private void setupScreensOrder() method
-- init() method - Added call to setupScreensOrder()
-- Fixed screen.isInitialised not being set to true after screen initialisation in void update() method
-- 

- Created GameTest class which extends Game
-- Added basic constructor
-- Added override init() method
-- Added override update(float deltaTime) method
-- Added override render() method
-- Added override cleanup() method

- Moved SplashScreen class to org.bearengine.screen package

- Created BearEngineSplashScreen class which extends SplashScreen
-- Added public BearEngineSplashScreen() constructor which calls super(5)

Input-Handling Branch #1 - 19/05/16
-----------------------------------
- Created Keyboard class extends GLFWKeyCallback
-- Added private static byte[] KeyStates
-- Added override void invoke method
-- Added static boolean isKeyPressed method
-- Added static boolean isKeyHeld method
-- Added static boolean isKeyDown method

- Created Mouse class
-- Added private static byte[] MouseState
-- Added private static double x & y
-- Added private static boolean cursorOverWindow
-- Added GLFWMouseButtonCallback
-- Added GLFWCursorPosCallback
-- Added GLFWCursorEnterCallback
-- Added static boolean isButtonPressed method
-- Added static double getMouseX method
-- Added static double getMouseY method
-- Added static boolean isCursorOverWindow method
-- Added void setCallbacks(long windowID) method

- Updated Display class
-- Added private GLFWKeyCallback keyCallback;
-- Updated void setCallbacks method
--- Added setting Keyboard callback to new Keyboard instance
--- Added creating Mouse callback and calling its setCallbacks method

Shaders Branch #1 - 20/05/16
--------------------------------------------
- Moved Project to IntelliJ IDEA IDE








